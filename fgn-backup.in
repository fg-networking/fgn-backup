#!/bin/sh
# version @@VERSION@@

# unset variables are a script error
set -u

# read configuration
. /etc/fgn-backup.conf

# include function-modules
for MODULE in $MODULELIST; do
    . ${MODULEPATH}/${MODULE}
done

# true: create backup data and save to ftp server
# false: only save files
if [ 1 = 1 ]; then

# create log directory if needed
    mkdir -pv "$BACKUPLOGDIR"
# truncate log files
    : > "$BACKUPLOG"
    : > "$PARTITIONLOG"
    : > "$DPKGSELECTION"

# create backup (logfiles, DB dump, and tar archives of partitions)
    log_echo "#######################################"
    log_echo "#_______ FTP Backup Nachricht ________#"
    log_echo "#-------------------------------------#"
    log_header_printf "# Host:~%-29s~#\n" "$HOST"
    log_echo "#~Datum:~$DATE~~Zeit:~$TIME~~ #"
    log_echo "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #"
    log_echo "#---------------Backuplog-------------#"
    log_echo "#____________________________________ #"
    log_echo "#######################################"

    p_log_echo "========= fdisk -l ========="
    fdisk -l 2>&1 | tee -a "${PARTITIONLOG}"
    p_log_echo "========= df ==============="
    df 2>&1 | tee -a "${PARTITIONLOG}"
    p_log_echo "========= fstab ==============="
    cat /etc/fstab 2>&1 | tee -a "${PARTITIONLOG}"

    dpkg --get-selections "*" > ${DPKGSELECTION} 2>&1

    date | tee -a "${BACKUPLOG}"
    dump_mysql_dbs 2>&1 | tee -a "${BACKUPLOG}"
    tar_partitions 2>&1 | tee -a "${BACKUPLOG}"

# only save files
fi

# upload archives to FTP server
ftp_upload 2>&1 | tee -a "${BACKUPLOG}"

# check free space on FTP server
check_free_ftp_space 2>&1 | tee -a "${BACKUPLOG}"

exit 0

# vim:filetype=sh:shiftwidth=4:expandtab:
