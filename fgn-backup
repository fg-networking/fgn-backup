#!/bin/sh

# read configuration
. /etc/fgn-backup.conf

# include function-modules
for MODULE in $MODULELIST; do
    . ${MODULEPATH}/${MODULE}
done

# true: create backup data and save to ftp server
# false: only save files
if [ 1 = 1 ]; then

echo "#######################################" | tee "${BACKUPLOG}"
echo "#_______ FTP Backup Nachricht ________#" | tee -a "${BACKUPLOG}"
echo "#-------------------------------------#" | tee -a "${BACKUPLOG}"
echo "#~Datum:~$DATE~~Zeit:~$TIME~~ #" | tee -a "${BACKUPLOG}"
echo "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #" | tee -a "${BACKUPLOG}"
echo "#---------------Backuplog-------------#" | tee -a "${BACKUPLOG}"
echo "#____________________________________ #" | tee -a "${BACKUPLOG}"
echo "#######################################" | tee -a "${BACKUPLOG}"

echo "========= fdisk -l =========" | tee "${PARTITIONLOG}"
fdisk -l | tee -a "${PARTITIONLOG}"
echo "========= df ===============" | tee -a "${PARTITIONLOG}"
df | tee -a "${PARTITIONLOG}"
echo "========= fstab ==============="|tee -a "${PARTITIONLOG}"
cat /etc/fstab | tee -a "${PARTITIONLOG}"

dpkg --get-selections "*" > ${DPKGSELECTION}

date
dump_mysql_dbs | tee -a "${BACKUPLOG}"

rm -rf ${BACKUPCACHEDIR}/*.tar.gz
mkdir -pv ${BACKUPCACHEDIR}
for partition in $BACKUPLIST; do

    echo
    echo Partition $partition:
    echo

    if [ ! -d $partition ]; then
	echo
        echo    "  WARNING: Backuplist not up to date - target: $partition"
	echo    "           doesn't exist or isn't a directory: "
	echo -n "           "
	ls -ld $partition
	echo
	continue
    fi

    cd $partition
    if [ ! -f tar-exclude ]; then
	touch tar-exclude
    fi

    partfile=`echo -n bak${partition}.tar.gz | tr '/' '_'`
    fullpartfile=${BACKUPCACHEDIR}/${partfile}

    echo -n "TAR: $fullpartfile "
    tar $TARFLAGS $fullpartfile .
    date
done

# only save files
fi

cd ${BACKUPCACHEDIR}
FTPDIR=${TIMESTAMP}
# don't use "prompt" when already using -i
echo -n "Starting FTP transfer: "
date
ftp -inv <<BACKUPENDE 2>&1 | tee -a "${BACKUPLOG}"
    open ${FTP_SERVER}
    user ${FTP_USER} ${FTP_PASS}
    bin
    mkdir ${FTPDIR}
    cd ${FTPDIR}
    mput *
BACKUPENDE

echo -n "Finished FTP transfer: "
date

# check free space on FTP server
USED_FTP_SPACE=$(echo du -sm . | lftp -u "${FTP_USER},${FTP_PASS}" "$FTP_SERVER" | cut -f1)
NEEDED_FTP_SPACE=$(du -sm $BACKUPCACHEDIR | cut -f1)
FREE_FTP_SPACE=$(($TOTAL_FTP_SPACE - $USED_FTP_SPACE))
echo "Used space on FTP server (in MB): $USED_FTP_SPACE"
echo "Free space on FTP server (in MB): $FREE_FTP_SPACE"
echo "Current size of backup   (in MB): $NEEDED_FTP_SPACE"
if [ $NEEDED_FTP_SPACE -ge $FREE_FTP_SPACE ]; then
    echo -e "\nWARNING: not enough space left on FTP server for next backup"
else
    echo "There is space for $(($FREE_FTP_SPACE / $NEEDED_FTP_SPACE))" \
         "backup(s) left."
fi

exit 0
