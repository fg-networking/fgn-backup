#!/bin/sh

# unset variables are a script error
set -u

# read configuration
. /etc/fgn-backup.conf

# include function-modules
for MODULE in $MODULELIST; do
    . ${MODULEPATH}/${MODULE}
done

# true: create backup data and save to ftp server
# false: only save files
if [ 1 = 1 ]; then

# create log directory if needed
    mkdir -pv "$BACKUPLOGDIR"
# truncate log files
    : > "$BACKUPLOG"
    : > "$PARTITIONLOG"
    : > "$DPKGSELECTION"

# create backup (logfiles, DB dump, and tar archives of partitions)
    log_echo "#######################################"
    log_echo "#_______ FTP Backup Nachricht ________#"
    log_echo "#-------------------------------------#"
    log_header_printf "# Host:~%-29s~#\n" "$HOST"
    log_echo "#~Datum:~$DATE~~Zeit:~$TIME~~ #"
    log_echo "#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #"
    log_echo "#---------------Backuplog-------------#"
    log_echo "#____________________________________ #"
    log_echo "#######################################"

    p_log_echo "========= fdisk -l ========="
    fdisk -l | tee -a "${PARTITIONLOG}"
    p_log_echo "========= df ==============="
    df | tee -a "${PARTITIONLOG}"
    p_log_echo "========= fstab ==============="
    cat /etc/fstab | tee -a "${PARTITIONLOG}"

    dpkg --get-selections "*" > ${DPKGSELECTION}

    date | tee -a "${BACKUPLOG}"
    dump_mysql_dbs | tee -a "${BACKUPLOG}"
    tar_partitions | tee -a "${BACKUPLOG}"

# only save files
fi

cd ${BACKUPCACHEDIR}
# don't use "prompt" when already using -i
log_echo -n "Starting FTP transfer: "
date | tee -a "${BACKUPLOG}"
ftp -inv <<BACKUPENDE 2>&1 | tee -a "${BACKUPLOG}"
    open ${FTP_SERVER}
    user ${FTP_USER} ${FTP_PASS}
    bin
    mkdir ${FTPDIR}
    cd ${FTPDIR}
    pwd
    mput *
BACKUPENDE

log_echo -n "Finished FTP transfer: "
date | tee -a "${BACKUPLOG}"

# check free space on FTP server
USED_FTP_SPACE=$(echo du -sm . | lftp -u "${FTP_USER},${FTP_PASS}" "$FTP_SERVER" | cut -f1)
NEEDED_FTP_SPACE=$(du -sm $BACKUPCACHEDIR | cut -f1)
FREE_FTP_SPACE=$(($TOTAL_FTP_SPACE - $USED_FTP_SPACE))
log_echo "Used space on FTP server (in MB): $USED_FTP_SPACE"
log_echo "Free space on FTP server (in MB): $FREE_FTP_SPACE"
log_echo "Current size of backup   (in MB): $NEEDED_FTP_SPACE"
if [ $NEEDED_FTP_SPACE -ge $FREE_FTP_SPACE ]; then
    log_echo -e "\nWARNING: not enough space left on FTP server for next backup"
else
    log_echo "There is space for $(($FREE_FTP_SPACE / $NEEDED_FTP_SPACE))" \
             "backup(s) left."
fi

exit 0
